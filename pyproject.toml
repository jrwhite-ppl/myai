[build-system]
requires = ["uv_build >= 0.7.19, <0.9.0"]
build-backend = "uv_build"

[project]
name = "myai"
version = "0.0.1"
description = "MyAgents - Unified AI Configuration System"
readme = "README.md"
authors = [{ name = "MyAgents", email = "myagents@galileo-ft.com" }]
requires-python = ">=3.11"
dependencies = [
    "rich==13.5.2",
    "typer==0.16.0",
]

[project.scripts]
myai = "myai.cli:main"

[project.optional-dependencies]
test = [
    "coverage==7.3.0",
    "httpx==0.24.1",
    "mockito==1.4.0",
    "pytest==7.4.0",
    "pytest-cov==5.0.0",
    "responses==0.25.0",
    "pytest-asyncio==0.21.1",
    "pytest-xdist", 
    "awscli==1.32.47",
    "aws-cdk-lib==2.94.0",
    "constructs>=10.2.70",
    "cdk_nag>=2.0.0",
    "Nuitka==2.0.5",
    "pydantic>=2.0.0",
    "pydantic-settings>=2.0.0"
]
lint = [
    "black==24.3.0",
    "mypy==1.9.0",
    "ruff==0.3.3",
    "isort==5.13.2",
]

[tool.uv]
package = true

[tool.black]
target-version = ["py37"]
line-length = 120
preview = true
enable-unstable-feature = ["string_processing"]
skip-string-normalization = true

[tool.pytest.ini_options]
addopts = "--durations=10"

[tool.ruff]
target-version = "py37"
line-length = 120

[tool.ruff.lint]
select = [
    "A",
    "ARG",
    "B",
    "C",
    "DTZ",
    "E",
    "EM",
    "F",
    "FBT",
    "I",
    "ICN",
    "ISC",
    "N",
    "PLC",
    "PLE",
    "PLR",
    "PLW",
    "Q",
    "RUF",
    "S",
    "T",
    "TID",
    "UP",
    "W",
    "YTT",
]
ignore = [
    # Allow non-abstract empty methods in abstract base classes
    "B027",
    # Allow boolean positional values in function calls, like `dict.get(... True)`
    "FBT003",
    # Ignore checks for possible passwords
    "S105",
    "S106",
    "S107",
    # Ignore complexity
    "C901",
    "PLR0911",
    "PLR0912",
    "PLR0913",
    "PLR0915",
    # Allow prints in tests
    "T201",
    # Allow default boolean values in method signature - nice for typer
    "FBT002",
    # Allow function default parameters
    "B008",
    # Allow use of list slicing
    "RUF015",
    # Allow class attribute named 'id', used on sqlalchemy models
    "A003",
    # allow use of random
    "S311"
]
unfixable = [
    # Don't touch unused imports
    "F401",
]

[[tool.mypy.overrides]]
module = [
    "rich.*",
]
ignore_missing_imports = true

[tool.ruff.lint.isort]
known-first-party = ["myai"]
combine-as-imports = true  # allows nested imports

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.per-file-ignores]
# Tests can use magic values, assertions, and relative imports
"tests/**/*" = ["PLR2004", "S101", "TID252"]

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
line_length = 120
default_section = "FIRSTPARTY"
known_third_party = [
    "pytest",
]

known_first_party=["myai"]
force_sort_within_sections=true