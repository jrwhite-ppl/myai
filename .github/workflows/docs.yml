name: Documentation

on:
  push:
    branches: [ main ]
    paths:
      - 'docs/**'
      - 'README.md'
      - 'specs/**'
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-docs:
    name: Build documentation
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up uv
      uses: astral-sh/setup-uv@v3
      with:
        enable-cache: true
        cache-dependency-glob: "uv.lock"

    - name: Set up Python
      run: uv python install 3.11

    - name: Install dependencies with docs extra
      run: |
        uv add --group docs sphinx sphinx-rtd-theme myst-parser sphinxcontrib-mermaid
        uv sync --group docs

    - name: Setup documentation structure
      run: |
        if [ ! -d "docs" ]; then
          mkdir -p docs
          echo "# MyAI Documentation" > docs/index.md
          echo "" >> docs/index.md
          echo "Welcome to the MyAI documentation." >> docs/index.md
        fi

    - name: Create Sphinx configuration
      run: |
        cat > docs/conf.py << 'EOF'
        import os
        import sys
        sys.path.insert(0, os.path.abspath('../src'))

        project = 'MyAI'
        copyright = '2025, MyAgents'
        author = 'MyAgents'
        version = '0.0.1'
        release = '0.0.1'

        extensions = [
            'sphinx.ext.autodoc',
            'sphinx.ext.viewcode',
            'sphinx.ext.napoleon',
            'myst_parser',
            'sphinxcontrib.mermaid',
        ]

        templates_path = ['_templates']
        exclude_patterns = ['_build', 'Thumbs.db', '.DS_Store']

        html_theme = 'sphinx_rtd_theme'
        html_static_path = ['_static']

        source_suffix = {
            '.rst': None,
            '.md': 'markdown',
        }
        EOF

    - name: Build documentation
      run: |
        cd docs
        uv run --group docs sphinx-build -b html . _build/html

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: docs/_build/html

  deploy-docs:
    name: Deploy documentation
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build-docs

    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
